{
  "name": "Yasic",
  "tagline": "a transcompiler for yasic-scripts to flatassembly, written in fasm-macros",
  "body": "First of all some terms should be defined:\r\n* »source« or »code«: the code you write in yasic\r\n* »output«: the output this compiler produce or the compiled form of it\r\n* »input«: the input for your compiled program\r\n\r\nA source file must start with this header:\r\n\r\n    #!sba:yasic\r\n\r\nand a newline character.\r\n\r\nThen you could write some code, e.g.:\r\n\r\n    label\r\n    {\r\n      'hello world'\r\n      {\r\n        #print some text\r\n        echo('hello my friend')\r\n        jump('label')\r\n      }\r\n    }\r\n\r\n`label {}` defines a new label in the output. You could refer to it e.g. with `jump('label')`, which creates `jmp label` in the output. After a label a block (`{ [...] }`) have to follow.\r\n\r\nTo compare the input with a regular expression, you could use `'something' {}`. This compares the input with the string »something«. If this comparison is true, the block would be executed, if not, the output jumps to the end of the block. I go into detail later.\r\n\r\nIf you just want to remark or just do not want something in the output, you could use comments:\r\n\r\n    #comment from »#« to the end of the line.\r\n\r\nThere are also some predefined functions like `echo('text')` to let the output call an echo-function to print _'text'_ or `jump('label')` to jump to _label_.\r\nThe end of a function-call is a `;` or a newline character, so if you want everything on one line, you have to use `;` at the end:\r\n\r\n    'hello world' { echo('hello my friend'); }\r\n\r\nIt is time to compile this piece of code!\r\nYasic is written in flatassembler so you need to [download](http://flatassembler.net/download.php) it, if not already done so far.\r\nI also provided an [shell-script](https://github.com/sivizius/yasic/blob/master/sba.sh), but you could compile your source with:\r\n\r\n    fasm -m 64000 \"main.fasm\" \"output.fasm\"\r\n\r\nBut before you compile `main.fasm`, you need to adjust the name of your source-file in this line of [`main.fasm`](https://github.com/sivizius/yasic/blob/master/main.fasm):\r\n\r\n    yasic_parse 'source-file.sba'\r\n\r\nThere are also some other options for the compiler in this file:\r\n* to define the name of the echo-function in output:\r\n\r\n    yasic.OpEcho          equ 'echo_put'\r\n\r\n* jump here, if the input does not match:\r\n\r\n    yasic.FailSafe        equ 'fail_safe'\r\n\r\n* call this to get a new character:\r\n\r\n    yasic.GetChar         equ 'qword [ files.getChar ]'\r\n\r\n* if `echo` should called like this: `echo_put qword [ msg_0000000000000000 ]`, set this option\r\n\r\n    yasic.IndirectString  equ false\r\n\r\n* set the structure of strings (e.g. `db`):\r\n\r\n    yasic.Symbol          equ 'symbol'\r\n\r\n* where is the return-value of getChar? (e.g. `rax`)\r\n\r\n    yasic.TheChar         equ 'my_char'\r\n\r\n* if this option is true, the output is smaller, but less readable\r\n\r\n    yasic.MagicNumbers    equ false\r\n\r\n* set the indentation (not the indentation-size!)\r\n\r\n    yasic.Depth           equ 0\r\n\r\n.",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}